{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst formEl = document.querySelector(\"form\");\n\nconst createPromisedNotification = (delay, notificationState) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n     \n      if (notificationState === \"fulfilled\") {\n        resolve(delay);\n      } else {\n        reject(delay);\n      }\n    }, delay); \n  });\n};\n\nconst onSubmit = (event) => {\n  event.preventDefault();\n  \n  const inputDelay = Number(formEl.elements.delay.value);\n  const notificationState = formEl.elements.state.value; \n  if (isNaN(inputDelay) || inputDelay < 0) {\n    iziToast.error({\n      message: \"Please enter a valid delay time!\",\n    });\n    return;\n  }\n  createPromisedNotification(inputDelay, notificationState)\n    .then((result) => {\n      iziToast.success({\n        message: `✅ Fulfilled promise in ${result} ms!`,\n      });\n    })\n    .catch((error) => {\n      iziToast.error({\n        message: `❌ Rejected promise in ${error} ms!`,\n      });\n    });\n};\n\nformEl.addEventListener(\"submit\", onSubmit);\n\n"],"names":["formEl","createPromisedNotification","delay","notificationState","resolve","reject","onSubmit","event","inputDelay","iziToast","result","error"],"mappings":"wIAGA,MAAMA,EAAS,SAAS,cAAc,MAAM,EAEtCC,EAA6B,CAACC,EAAOC,IAClC,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,WAAW,IAAM,CAEXF,IAAsB,YACxBC,EAAQF,CAAK,EAEbG,EAAOH,CAAK,CAEf,EAAEA,CAAK,CACZ,CAAG,EAGGI,EAAYC,GAAU,CAC1BA,EAAM,eAAc,EAEpB,MAAMC,EAAa,OAAOR,EAAO,SAAS,MAAM,KAAK,EAC/CG,EAAoBH,EAAO,SAAS,MAAM,MAChD,GAAI,MAAMQ,CAAU,GAAKA,EAAa,EAAG,CACvCC,EAAS,MAAM,CACb,QAAS,kCACf,CAAK,EACD,MACD,CACDR,EAA2BO,EAAYL,CAAiB,EACrD,KAAMO,GAAW,CAChBD,EAAS,QAAQ,CACf,QAAS,0BAA0BC,CAAM,MACjD,CAAO,CACP,CAAK,EACA,MAAOC,GAAU,CAChBF,EAAS,MAAM,CACb,QAAS,yBAAyBE,CAAK,MAC/C,CAAO,CACP,CAAK,CACL,EAEAX,EAAO,iBAAiB,SAAUM,CAAQ"}